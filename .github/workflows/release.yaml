name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: "Build distribution ðŸ“¦"
    runs-on: "ubuntu-latest"
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed to fetch the version from git
          persist-credentials: false

      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: "Install dependencies"
        run: python -m pip install build==0.8.0

      - name: "Build dists"
        run: |
          SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct) \
          python -m build

      - name: "Generate hashes"
        id: hash
        run: |
          cd dist && echo "hashes=$(sha256sum * | base64 -w0)" >> $GITHUB_OUTPUT

      - name: "Display the generated hashes"
        run: |
          echo "Generated hashes: ${{ steps.hash.outputs.hashes }}"

      - name: "Upload dists"
        uses: actions/upload-artifact@v4
        with:
          name: "dist"
          path: "dist/"
          if-no-files-found: error
          retention-days: 5

  Release-to-github:
    name: "Release to GitHub ðŸ‘€"
    needs: ["build"]
    runs-on: "ubuntu-latest"
    environment:
      name: "production"

    steps:
    - name: "Download dists"
      uses: actions/download-artifact@v4
      with:
        name: "dist"
        path: "dist/"

    - name: "Upload dists to a new GitHub Release Draft"
      env:
        GITHUB_TOKEN: "${{ secrets.GH_TOKEN }}"
      run: |
        gh release create "$GITHUB_REF_NAME" \
          --repo "$GITHUB_REPOSITORY" \
          --draft \
          --title "$GITHUB_REF_NAME" \
          --notes "" \
          --verify-tag
        gh release upload "$GITHUB_REF_NAME" dist/* --repo "$GITHUB_REPOSITORY"